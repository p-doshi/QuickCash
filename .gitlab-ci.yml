stages:
  - build
  - lint
  - test

cache:
  key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"

before_script:
  # Make the gradle wrapper executable.
  - chmod +x ./gradlew

Build:
  image: ethrozee/android
  interruptible: true
  tags:
    - dalfcs_docker_kvm
  stage: build
  script:
    # Build the application.
    - ./gradlew :app:assembleDebug

  artifacts:
    paths:
      # Give the results of compilation to the next stage.
      - app/build/
      - .gradle/

PmdLint:
  image: ethrozee/android
  interruptible: true
  tags:
    - dalfcs_docker_kvm
  stage: lint
  needs: []
  script:
    - pmd check -d app/src -R pmdRuleset.xml -f textcolor

GradleLint:
  image: ethrozee/android
  interruptible: true
  tags:
    - dalfcs_docker_kvm
  stage: lint
  needs:
    - Build
  script:
    # Run the linter.
    - ./gradlew :app:lintDebug

  after_script:
    # Reposition lint results.
    - mv app/build/reports/lint-results-debug.html lintResults.html

  artifacts:
    when: always
    expire_in: 30 days
    paths:
      # Give the results of linting
      - lintResults.html

UnitTests:
  image: ethrozee/android
  interruptible: true
  tags:
    - dalfcs_docker_kvm
  stage: test
  needs:
    - Build
  script:
    # Run the unit tests.
    - ./gradlew :app:testDebugUnitTest

  after_script:
    # Reposition test results.
    - mv app/build/reports/tests/testDebugUnitTest testDebugUnitTest

  artifacts:
    when: always
    expire_in: 30 days
    paths:
      - testDebugUnitTest/

ConnectedTests:
  image: ethrozee/android
  interruptible: true
  tags:
    - dalfcs_docker_kvm
  stage: test
  variables:
    GITHUB_REPO: csci3130_group_3
    GITHUB_USER: ethroz
    # This token can only access the specific repo it was made for.
    GITHUB_TOKEN: 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
    GITLAB_JOB_URL: $CI_PROJECT_URL/api/v4/projects/1/jobs/$CI_JOB_ID/artifacts
  script:
    # Build the android connected test apk.
    - ./gradlew :app:assembleDebugAndroidTest

    # Start a github action to run the connected tests.
    - >
      curl -X POST
      -H "Accept: application/vnd.github+json"
      -H "Authorization: Bearer $GITHUB_TOKEN"
      -H "X-Github-Api-Version: 2022-11-28"
      -L https://api.github.com/repos/$GITHUB_USER/$GITHUB_REPO/dispatches
      -d '{"event_type":"trigger-test","client_payload":{"job_url":"$GITLAB_JOB_URL"}}'

  after_script:
    # Move the apks to a new apk folder.
    - mkdir -p apks && find app/build/outputs -name "*.apk" -exec cp {} apks/. \;

  artifacts:
    when: always
    expire_in: 30 days
    paths:
      - apks/
