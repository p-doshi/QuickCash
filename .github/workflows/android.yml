name: Run connected tests

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'The unique name of the run'
        required: true
      job_url:
        description: 'The URL to the repository'
        required: true
      package:
        description: 'The package name of the app to test'
        required: true

run-name: ${{ github.event.inputs.name }}

jobs:
  ConnectedTests:
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     api-level: [28, 30, 32, 34]
    steps:
      - name: Download APKs from Repo
        env:
          JOB_URL: ${{ github.event.inputs.job_url }}
          PACKAGE: ${{ github.event.inputs.package }}
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          echo $JOB_URL
          echo $PACKAGE
          sleep 60
          echo Hi > test.txt
        # curl -s -o artifacts.zip -L -H "PRIVATE-TOKEN: $TOKEN" "$JOB_URL"
        # unzip artifacts.zip apks/* && mv apks/* .
      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: test
          path: test.txt
      # - name: Enable KVM
      #   run: |
      #     echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
      #     sudo udevadm control --reload-rules
      #     sudo udevadm trigger --name-match=kvm
      # - name: Run connected tests
      #   uses: ReactiveCircus/android-emulator-runner@v2
      #   env:
      #     PACKAGE: ${{ github.event.inputs.package }}
      #   with:
      #     api-level: ${{ matrix.api-level }}
      #     target: google_apis
      #     arch: x86
      #     profile: small
      #     script: |
      #       adb install app-debug.apk
      #       adb install app-debug-androidTest.apk
      #       adb shell am instrument -w $PACKAGE/androidx.test.runner.AndroidJUnitRunner
